version: "2.1"

services:
  webcam-capture:
    build: ./balena.mono_go4vl
    privileged: true
    volumes:
      - 'resin-data:/data'

  mycodo_influxdb:
    container_name: mycodo_influxdb
    image: influxdb:2.3.0-alpine
    volumes:
      # Mount for influxdb data directory and configuration
      - $HOME/temp/influxdbv2:/var/lib/influxdb2:rw
    ports:
      - "8086:8086"

  mycodo_nginx:
    container_name: mycodo_nginx
    restart: always
    build:
      context: ./
      dockerfile: nginx/Dockerfile
    volumes:
      - mycodo:/usr/local/mycodo
      - mycodo_log:/var/log/mycodo
      - mycodo_ssl_certs:/home/mycodo/mycodo/mycodo_flask/ssl_certs
        #- /etc/localtime:/etc/localtime:ro  # Use timezone of the host (read-only)
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - mycodo_flask

  mycodo_daemon:
    container_name: mycodo_daemon
    image: nargetdev/app
    restart: always
    # build:
    #   context: ./
    #   dockerfile: ./Dockerfile.template
    volumes:
      - mycodo:/usr/local/mycodo
      - mycodo_env:/home/mycodo/env
      - mycodo_databases:/home/mycodo/databases
      - mycodo_custom_functions:/home/mycodo/mycodo/functions/custom_functions
      - mycodo_custom_actions:/home/mycodo/mycodo/actions/custom_actions
      - mycodo_custom_inputs:/home/mycodo/mycodo/inputs/custom_inputs
      - mycodo_custom_outputs:/home/mycodo/mycodo/outputs/custom_outputs
      - mycodo_custom_widgets:/home/mycodo/mycodo/widgets/custom_widgets
      - mycodo_custom_user_scripts:/home/mycodo/mycodo/user_scripts
      - mycodo_log:/var/log/mycodo
      - mycodo_ssl_certs:/home/mycodo/mycodo/mycodo_flask/ssl_certs
        # - /dev:/dev
        # - /sys:/sys
        # - /opt:/opt
        # - /etc/localtime:/etc/localtime:ro  # Use timezone of the host (read-only)
    privileged: true
    command: bash -c "PYTHONPATH=/home/mycodo /home/mycodo/env/bin/python mycodo_daemon.py"
    depends_on:
      - mycodo_flask
      - mycodo_influxdb

  mycodo_flask:
    container_name: mycodo_flask
    image: nargetdev/app
    restart: always
    # build:
    #   context: ./
    #   dockerfile: ./Dockerfile.template
    volumes:
      - mycodo:/usr/local/mycodo
      - mycodo_env:/home/mycodo/env
      - mycodo_databases:/home/mycodo/databases
      - mycodo_custom_functions:/home/mycodo/mycodo/functions/custom_functions
      - mycodo_custom_actions:/home/mycodo/mycodo/actions/custom_actions
      - mycodo_custom_inputs:/home/mycodo/mycodo/inputs/custom_inputs
      - mycodo_custom_outputs:/home/mycodo/mycodo/outputs/custom_outputs
      - mycodo_custom_widgets:/home/mycodo/mycodo/widgets/custom_widgets
      - mycodo_custom_user_scripts:/home/mycodo/mycodo/user_scripts
      - mycodo_log:/var/log/mycodo
      - mycodo_ssl_certs:/home/mycodo/mycodo/mycodo_flask/ssl_certs
        # - /dev:/dev
        # - /var/run/docker.sock:/var/run/docker.sock:ro  # Permits container to restart itself
        # - /etc/localtime:/etc/localtime:ro  # Use timezone of the host (read-only)
    privileged: true
    command: /home/mycodo/env/bin/python -m gunicorn --workers 1 --bind unix:/usr/local/mycodo/mycodoflask.sock start_flask_ui:app
    depends_on:
      - mycodo_influxdb

  mycodo_telegraf:
    image: telegraf_w_conf
    container_name: mycodo_telegraf
    build:
      context: ./telegraf
      dockerfile: Dockerfile.template
    depends_on:
      - mycodo_influxdb

  mycodo_grafana:
    image: grafana/grafana:latest
    container_name: mycodo_grafana
    ports:
      - "3000:3000"
    env_file:
      - 'grafana/env.grafana'
    volumes:
      - mycodo_grafana:/var/lib/grafana
    depends_on:
      - mycodo_influxdb
  
volumes:
  mycodo:
  mycodo_env:
  mycodo_custom_functions:
  mycodo_custom_actions:
  mycodo_custom_inputs:
  mycodo_custom_outputs:
  mycodo_custom_widgets:
  mycodo_custom_user_scripts:
  mycodo_databases:
  mycodo_ssl_certs:
  mycodo_log:
  mycodo_influxdb:
  mycodo_grafana:
  resin-data: